{"version":3,"sources":["Components/Todo.js","Components/TodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todos","markComplete","ListGroup","className","map","todo","ListGroupItem","todoString","onClick","id","TodoForm","addTodos","useState","setTodoString","Form","onSubmit","e","preventDefault","alert","v4","FormGroup","InputGroup","Input","type","name","placeholder","value","onChange","target","InputGroupAddon","addonType","Button","color","App","setTodos","useEffect","localTodos","localStorage","getItem","JSON","parse","a","setItem","stringify","Container","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAoBeA,EAhBF,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,MAAQC,EAAiB,EAAjBA,aAEnB,OACI,cAACC,EAAA,EAAD,CAAWC,UAAU,kBAArB,SACKH,EAAMI,KAAI,SAAAC,GAAI,OACX,eAACC,EAAA,EAAD,WACKD,EAAKE,WACP,sBAAMJ,UAAU,cACXK,QAAS,kBAAMP,EAAaI,EAAKI,KADtC,SAEK,cAAC,IAAD,QAJYJ,EAAKI,U,wDC0C1BC,EAvCE,SAAC,GAAe,IAAdC,EAAa,EAAbA,SAAa,EACMC,mBAAS,IADf,mBACxBL,EADwB,KACXM,EADW,KAgB5B,OACI,cAACC,EAAA,EAAD,CAAMC,SAdS,SAAAC,GAEjB,GADAA,EAAEC,iBACgB,KAAfV,EACC,OAAOW,MAAM,mBAEjB,IAAMb,EAAO,CACTE,aACAE,GAAIU,eAGRR,EAASN,GACTQ,EAAc,KAGZ,SACI,cAACO,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,KAAK,OACLC,KAAK,OACLf,GAAG,OACHgB,YAAY,aACZC,MAAOnB,EACPoB,SAAU,SAAAX,GAAC,OAAIH,EAAcG,EAAEY,OAAOF,UAE1C,cAACG,EAAA,EAAD,CAAiBC,UAAU,UAA3B,SACI,cAACC,EAAA,EAAD,CACIC,MAAM,UADV,2BCCTC,EAnCH,WAAM,IAAD,EAEWrB,mBAAS,IAFpB,mBAETZ,EAFS,KAEDkC,EAFC,KAIfC,qBAAU,WACR,IAAMC,EAAaC,aAAaC,QAAQ,SACpCF,GACDF,EAASK,KAAKC,MAAMJ,MAErB,IAGF,IAAMzB,EAAQ,uCAAG,WAAMN,GAAN,SAAAoC,EAAA,sDACbP,EAAS,GAAD,mBAAKlC,GAAL,CAAWK,KADN,2CAAH,sDAId8B,qBAAU,WACRE,aAAaK,QAAQ,QAAUH,KAAKI,UAAU3C,MAC5C,CAACA,IAMP,OACE,eAAC4C,EAAA,EAAD,WAEI,+DACA,cAAC,EAAD,CAAM5C,MAAOA,EAAOC,aARH,SAAAQ,GACnByB,EAASlC,EAAM6C,QAAO,SAAAxC,GAAI,OAAIA,EAAKI,KAAMA,SAQvC,cAAC,EAAD,CAAUE,SAAUA,QCxBbmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b383df85.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport {ListGroup,ListGroupItem} from \"reactstrap\";\r\nimport {FaCheckDouble} from \"react-icons/fa\";\r\n\r\nconst Todo = ({todos , markComplete}) =>{\r\n\r\n    return(\r\n        <ListGroup className=\"mt-5 mb-2 items\">\r\n            {todos.map(todo =>(\r\n                <ListGroupItem key={todo.id}> \r\n                    {todo.todoString}            \r\n                   <span className=\"float-right\"\r\n                        onClick={() => markComplete(todo.id)}> \r\n                        <FaCheckDouble/>\r\n                   </span>\r\n                </ListGroupItem>\r\n            ))}\r\n        </ListGroup>\r\n    )\r\n}\r\nexport default Todo;","import React,{useState} from \"react\";\r\nimport {\r\n    FormGroup,\r\n    Input,\r\n    Button,\r\n    Form,\r\n    InputGroup,\r\n    InputGroupAddon\r\n} from \"reactstrap\"\r\n\r\nimport {v4} from \"uuid\";\r\n\r\nconst TodoForm = ({addTodos}) =>{\r\n  const[todoString , setTodoString] = useState(\"\");\r\n\r\n  const handleSubmit = e =>{\r\n      e.preventDefault()\r\n      if(todoString === \"\"){\r\n          return alert(\"Enter any thing\")\r\n      }\r\n      const todo = {            //this is the object containe two properties.   \r\n          todoString,           //title is filled up with state (todoString)\r\n          id :v4(),             //unique id generator with the help of uuid\r\n      }\r\n\r\n      addTodos(todo)             //this is a prop (user pass a prop)\r\n      setTodoString(\"\")          //updated todo (updated todo is empty ) till user enter some thing new todo.    \r\n  }\r\n    return(\r\n        <Form onSubmit={handleSubmit}>\r\n            <FormGroup>\r\n                <InputGroup>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"todo\"\r\n                        id=\"todo\"\r\n                        placeholder=\"Enter todo\"\r\n                        value={todoString}\r\n                        onChange={e =>(setTodoString(e.target.value))}\r\n                    />\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                        <Button \r\n                            color=\"warning\"\r\n                            >Add\r\n                        </Button>\r\n                    </InputGroupAddon>\r\n                </InputGroup>\r\n            </FormGroup>\r\n        </Form>\r\n    )\r\n}\r\nexport default TodoForm;","import React,{useState,useEffect} from 'react';\nimport {Container,Row} from \"reactstrap\"\nimport './App.css';\n\nimport Todo from \"./Components/Todo\";\nimport TodoForm from \"./Components/TodoForm\";\n\nconst App = () =>{\n\n  const[todos , setTodos] = useState([])\n \n  useEffect(() => {\n    const localTodos = localStorage.getItem(\"todos\")\n    if (localTodos) {\n       setTodos(JSON.parse(localTodos))\n    }\n  } , []);\n\n\n    const addTodos = async todo =>{\n        setTodos([...todos,todo])\n    }\n\n    useEffect(() => {\n      localStorage.setItem(\"todos\" , JSON.stringify(todos))\n    } , [todos] )\n\n    const markComplete = id =>{\n      setTodos(todos.filter(todo => todo.id !==id))\n    }\n\n  return(\n    <Container>\n      \n        <h1>Data Storing In Local Storage</h1>\n        <Todo todos={todos} markComplete={markComplete}/>\n        <TodoForm addTodos={addTodos}/>\n     \n    </Container>  \n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}