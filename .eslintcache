[{"C:\\Users\\Prasad\\Desktop\\react\\datastore-in-localstorage\\src\\index.js":"1","C:\\Users\\Prasad\\Desktop\\react\\datastore-in-localstorage\\src\\reportWebVitals.js":"2","C:\\Users\\Prasad\\Desktop\\react\\datastore-in-localstorage\\src\\App.js":"3","C:\\Users\\Prasad\\Desktop\\react\\datastore-in-localstorage\\src\\Components\\Todo.js":"4","C:\\Users\\Prasad\\Desktop\\react\\datastore-in-localstorage\\src\\Components\\TodoForm.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":1117,"mtime":1609828062165,"results":"9","hashOfConfig":"7"},{"size":786,"mtime":1608727392747,"results":"10","hashOfConfig":"7"},{"size":1646,"mtime":1607163412474,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"n3lpg1",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Users\\Prasad\\Desktop\\react\\datastore-in-localstorage\\src\\index.js",[],["26","27"],"C:\\Users\\Prasad\\Desktop\\react\\datastore-in-localstorage\\src\\reportWebVitals.js",[],"C:\\Users\\Prasad\\Desktop\\react\\datastore-in-localstorage\\src\\App.js",["28","29"],"import React,{useState,useEffect} from 'react';\nimport {Container,Input,Row} from \"reactstrap\"\nimport './App.css';\n\nimport Todo from \"./Components/Todo\";\nimport TodoForm from \"./Components/TodoForm\";\n\nconst App = () =>{\n\n  const[todos , setTodos] = useState([])\n \n  useEffect(() => {\n    const localTodos = localStorage.getItem(\"todos\")\n    if (localTodos) {\n       setTodos(JSON.parse(localTodos))\n    }\n  } , []);\n\n\n    const addTodos = async todo =>{\n        setTodos([...todos,todo])\n    }\n\n    useEffect(() => {\n      localStorage.setItem(\"todos\" , JSON.stringify(todos))\n    } , [todos] )\n\n    const markComplete = id =>{\n      setTodos(todos.filter(todo => todo.id !==id))\n    }\n    const edittodo = (id) =>{\n       setTodos(todos.filter(todo => todo.id=id))\n      return(\n        <Input type=\"text\"\n        id=\"todo\"\n        name=\"todo\"\n        placeholder=\"Edit todo\"/>\n      )\n    }\n   \n  return(\n    <Container>\n      \n        <h1>TODO APP (React.js)</h1>\n        <Todo todos={todos} markComplete={markComplete}/>\n        <TodoForm addTodos={addTodos}/>\n     \n    </Container>  \n  )\n}\n\nexport default App;\n","C:\\Users\\Prasad\\Desktop\\react\\datastore-in-localstorage\\src\\Components\\Todo.js",["30","31","32"],"import React, { useContext } from \"react\";\r\nimport {Input, ListGroup,ListGroupItem} from \"reactstrap\";\r\nimport {FaCheckDouble,FaPen} from \"react-icons/fa\";\r\n\r\nconst Todo = ({todos,markComplete}) =>{\r\n  \r\n    return(\r\n        <ListGroup className=\"mt-5 mb-2 items\">\r\n            {todos.map(todo =>(\r\n                <ListGroupItem key={todo.id}> \r\n                    <input type=\"text\" id={todo.id}\r\n                    value={todo.todoString}\r\n                    />\r\n                           \r\n                   <span className=\"float-right\"\r\n                        onClick={() => markComplete(todo.id)}> \r\n                        <FaCheckDouble/>\r\n                   </span>\r\n                </ListGroupItem>\r\n            ))}\r\n        </ListGroup>\r\n    )\r\n}\r\nexport default Todo;","C:\\Users\\Prasad\\Desktop\\react\\datastore-in-localstorage\\src\\Components\\TodoForm.js",[],["33","34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":2,"column":25,"nodeType":"41","messageId":"42","endLine":2,"endColumn":28},{"ruleId":"39","severity":1,"message":"43","line":31,"column":11,"nodeType":"41","messageId":"42","endLine":31,"endColumn":19},{"ruleId":"39","severity":1,"message":"44","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":27},{"ruleId":"39","severity":1,"message":"45","line":2,"column":9,"nodeType":"41","messageId":"42","endLine":2,"endColumn":14},{"ruleId":"39","severity":1,"message":"46","line":3,"column":23,"nodeType":"41","messageId":"42","endLine":3,"endColumn":28},{"ruleId":"35","replacedBy":"47"},{"ruleId":"37","replacedBy":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'edittodo' is assigned a value but never used.","'useContext' is defined but never used.","'Input' is defined but never used.","'FaPen' is defined but never used.",["49"],["50"],"no-global-assign","no-unsafe-negation"]